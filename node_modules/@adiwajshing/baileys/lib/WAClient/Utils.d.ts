/// <reference types="node" />
import { MessageType, MessageOptions } from './Constants';
import { WAMessage, WAMessageContent } from '../WAConnection/Constants';
export declare function validateJIDForSending(jid: string): void;
/** Type of notification */
export declare function getNotificationType(message: WAMessage): [string, MessageType?];
/** generates all the keys required to encrypt/decrypt & sign a media message */
export declare function getMediaKeys(buffer: any, mediaType: MessageType): {
    iv: Buffer;
    cipherKey: Buffer;
    macKey: Buffer;
};
/** generates a thumbnail for a given media, if required */
export declare function generateThumbnail(buffer: Buffer, mediaType: MessageType, info: MessageOptions): Promise<void>;
/**
 * Decode a media message (video, image, document, audio) & save it to the given file
 * @param message the media message you want to decode
 * @param filename the name of the file where the media will be saved
 * @param attachExtension should the correct extension be applied automatically to the file
 */
export declare function decodeMediaMessage(message: WAMessageContent, filename: string, attachExtension?: boolean): Promise<string | {
    filename: string;
}>;
